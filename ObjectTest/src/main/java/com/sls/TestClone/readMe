clone()方法属于Object的原生方法
    protected native Object clone() throws CloneNotSupportedException;
如果要使用clone()方法需要满足两个条件
1、实现 implements Cloneable接口并且重写clone()方法
2、覆盖clone()方法，可见性提升为public。


该克隆方法属于浅拷贝
如果要克隆的对象中属性都是基本属性 则进行拷贝的为不同的对象

如果要克隆的对象中属性为引用属性的化，这个引用属性的对象，发生拷贝的时候拷贝的是这个引用属性的引用。

=================================================================
如果要使用深拷贝
方法一 ： 将拷贝对象中的引用属性也要事项cloneAble接口 重写clone方法
方法二：实现序列化 利用流将对象输入 再利用新的对象接收







*************************************************************************

浅拷贝和深拷贝
前面实例中是浅拷贝和深拷贝的典型用例。

浅拷贝：被复制对象的所有值属性都含有与原来对象的相同，而所有的对象引用属性仍然指向原来的对象。

深拷贝：在浅拷贝的基础上，所有引用其他对象的变量也进行了clone，并指向被复制过的新对象。

也就是说，一个默认的clone()方法实现机制，仍然是赋值。

如果一个被复制的属性都是基本类型，那么只需要实现当前类的cloneable机制就可以了，此为浅拷贝。

如果被复制对象的属性包含其他实体类对象引用，那么这些实体类对象都需要实现cloneable接口并覆盖clone()方法。